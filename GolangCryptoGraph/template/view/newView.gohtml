<html>
    <head>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"></script>
        <style>
        body {
            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
            font-size: 11px;
            

        }
        </style>
    </head>
    <body>
    <div>
    <span>Currency Name: </span>{{.MetaData.DigitalCurrencyName}}</div>
    <div><span>Currency Code: </span>{{.MetaData.DigitalCurrencyCode}}</div>
    <div><span>Last Refreshed: </span>{{.MetaData.LastRefreshed}}
    <form method="POST" action="/">     
     Available Cryptos: 
      <select name="cryptos" id="cryptos" onchange="this.form.submit()">
            {{ range $key , $ele := .CryptoType}}
                <option value="{{$ele.CryptoSymbol}}">{{$ele.CryptoName}}</option>     
            {{end}}
              </select>
  </form> 
  </form> 
    </div>
          <div class="chart-container" style="position: relative; height:20vh; width:80vw">
                    <canvas id="myChart"></canvas>
                </div>
            <script>
            
                    document.getElementById("cryptos").value = {{.MetaData.DigitalCurrencyCode}}
                    var ctx = document.getElementById("myChart");
                    var xAxisLable = [
                        {{ range $key , $ele := .TimeSeries}}
                            {{$key}},
                        {{end}}
                    ];
                    var priceInUsD =[
                                    {{ range $key , $ele := .TimeSeries}}
                                       parseFloat({{$ele.HighDigCur}}),
                                    {{end}}
                                ];
                    var volume =[
                                    {{ range $key , $ele := .TimeSeries}}
                                       parseFloat({{$ele.Volume}}),
                                    {{end}}
                                ]
                    var maxPriceinUsd = Math.max.apply(Math, priceInUsD);
                    var maxVolumne= Math.max.apply(Math, volume);
                    var maxPriceInUsdStep = Math.ceil(maxPriceinUsd/(Math.pow(10,parseInt(maxPriceinUsd).toString().length-1)))*Math.pow(10,parseInt(maxPriceinUsd).toString().length-1);
                    var maxVolumeStep = Math.ceil(maxVolumne/(Math.pow(10,parseInt(maxVolumne).toString().length-1)))*Math.pow(10,parseInt(maxVolumne).toString().length-1);;

                    var myChart = new Chart(ctx, {
                        defaults : { global:{defaultColor : 'rgba(0, 0, 0, 0.0)'}},
                        type: 'line',
                        data: {
                            labels: xAxisLable,
                            xAxisID: "Time",
                            yAxisID: "Amount",
                            datasets: [
                            {
                                label: 'Price (USD)',
                                yAxisID :'A',
                                data: priceInUsD,
                                pointRadius:0,
                                
                                backgroundColor: ['rgba(0, 0, 0, 0.0)'],
                                
                                borderColor: [
                                    'rgba(54, 162, 235, 1)'
                                ],
                                borderWidth: 2
                            },
                            {
                                label: 'Volume',
                                yAxisID: 'B',
                                data: volume,
                                pointRadius:0,
                                backgroundColor: ['rgba(0, 0, 0, 0.0)'],
                                
                                borderColor: [
                                    'rgba(255, 206, 86, 1)'
                                ],
                                borderWidth: 2
                            }
                            ]
                        },
                        options: {
                            scales: {xAxes: [{
                                        time: {
                                            unit: 'day',
                                            displayFormats: {
                                                quarter: 'MMM YYYY'
                                            }
                                        }
                                    }],
                                yAxes: [{
                                    id:'A',
                                    position:'left',
                                    gridLines: {
                                        color: 'rgba(54, 162, 235, 0.3)'
                                    },
                                    ticks: {
                                         fontColor:'rgba(54, 162, 235, 1)',
                                         max:  maxPriceInUsdStep,
                                        min: 0,
                                        stepSize: maxPriceInUsdStep/10,
                                        beginAtZero:true
                                    },scaleLabel:{display:true,labelString: "Price"}},
                                    {
                                    id:'B',
                                    position:'right',
                                     gridLines: {
                                        color: 'rgba(255, 206, 86, 0.3)'
                                    },
                                    ticks: {
                                         fontColor:'rgba(255, 206, 86, 1)',
                                        max:  maxVolumeStep,
                                        min: 0,
                                        stepSize: maxVolumeStep/10,                                        
                                        beginAtZero:true,
                                    },scaleLabel:{display:true,labelString: "Volume"}}]
                            },
                            title: {
                                display: true,
                                text: {{.MetaData.Information}}+ " : "+{{.MetaData.DigitalCurrencyName}}
                            },
                            tooltips: {
                                    intersect:false,
                                    callbacks: {
                                        label: function(tooltipItem, data) {
                                            var label = data.datasets[tooltipItem.datasetIndex].label || '';

                                            if (label) {
                                                label += ': ';
                                            }
                                            label += Math.round(tooltipItem.yLabel * 100) / 100;
                                            return label;
                                        },
                                        labelColor: function(tooltipItem, chart) {
                                            return {
                                                borderColor: chart.data.datasets[tooltipItem.datasetIndex].borderColor[0],
                                                backgroundColor: chart.data.datasets[tooltipItem.datasetIndex].borderColor[0]
                                            }
                                        }
                                    }
                                }
                        }
                    });
                
            
                    </script>
        
    </body>
</html>
